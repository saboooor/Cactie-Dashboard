<%- include("partials/header", { bot, user, path, title: `${bot.user.username} Music Player` }) %>
<link rel="stylesheet" type="text/css" href="/assets/musicstyle.css" />

<section class="hero is-fullheight is-black">
  <div class="hero-body has-text-centered">
    <div class="container">
      <br><br><br><br>
      <div id="err" class="notification is-danger" style="display: none;">
        <br><p class="title">Error</p><br>
        <p id="errtxt" class="subtitle"></p><br>
        <a class="button is-primary is-rounded" href="./music">
          <i data-feather="refresh-cw" style="padding-right: 5px;"></i>
          Refresh
        </a><br><br>
      </div>
      <div class="columns" id="main">
        <div class="column floating">
          <img src="/assets/images/musicplaceholder.png" id="cover" class="cover">
        </div>
        <div class="column">
          <p class="title" id="title">Music Title</p>
          <p class="subtitle" id="author">Music Author</p>
          <p class="menu-label" id="vcname">In #Voice Channel</p>
          <div class="centered menu-label" id="progresscontainer">
            <h5 id="pos" style="padding:15px; margin:0;">0:00</h5>
              <input type="range" disabled id="progress" oninput="seek();" value="0" style="width: 50%;">
            <h5 id="total" style="padding:15px; margin:0;">0:00</h5>
          </div>
          <div class="centered">
            <a href="javascript:shuffle();" class="mediacontrols disabled" id="shuffle"><i data-feather="shuffle"></i></a>
            <a href="javascript:toggleplay();" class="mediacontrols disabled" id="playbtn"><i data-feather="play"></i></a>
            <a href="javascript:skip(1);" class="mediacontrols disabled" id="skip"><i data-feather="skip-forward"></i></a>
            <a href="javascript:togglenav();" class="mediacontrols" id="queuebtn"><i data-feather="list"></i></a>
          </div>
          <div class="centered disabled" id="volumecontainer">
            <i style="margin:15px;" data-feather="volume-x"></i>
              <input type="range" disabled id="volume" oninput="vol();" style="width:40%;" max=150>
            <i style="margin:15px;" data-feather="volume-2"></i>
          </div>
          <h5 class="centered menu-label" id="dj">Users without the DJ role have limited access.</h5>
        </div>
        <div id="queue" class="sidebar">
          <a href="javascript:togglenav();">
            <i data-feather="x"></i>
          </a>
        </div>
      </div>
    </div>
  </div>
</section>

<script>

  function shuffle() {
    ws.send(JSON.stringify({
			req: 'shuffle',
		}));
  }

  function toggleplay() {
    ws.send(JSON.stringify({
			req: 'toggleplay',
		}));
  }

  function skip(amount) {
    ws.send(JSON.stringify({
			req: 'skip',
      amount
		}));
  }

  function vol() {
    ws.send(JSON.stringify({
      req: 'volume',
      volume: document.getElementById('volume').value
    }));
  }
  
  function seek() {
    ws.send(JSON.stringify({
      req: 'seek',
      time: document.getElementById('progress').value
    }));
  }

  function togglenav() {
    document.getElementById("queue").style.width = document.getElementById("queue").style.width != '300px' ? "300px" : "0";
  }

  function convert(duration) {
    let seconds = parseInt((duration / 1000) % 60);
    let minutes = parseInt((duration / (1000 * 60)) % 60);
    const hours = parseInt((duration / (1000 * 60 * 60)) % 24);
    seconds = (seconds < 10) ? '0' + seconds : seconds;
    if (duration < 3600000) {
      return minutes + ':' + seconds;
    }
    else {
      minutes = (minutes < 10) ? '0' + minutes : minutes;
      return hours + ':' + minutes + ':' + seconds;
    }
  }

  function changeFavicon(src) {
    const link = document.createElement('link'),
    oldLink = document.getElementById('favicon');
    link.id = 'favicon';
    link.rel = 'shortcut icon';
    link.href = src;
    if (oldLink) document.head.removeChild(oldLink);
    document.head.appendChild(link);
  }

  const ws = new WebSocket('<%= wsurl %>?id=<%= user.id %>');

  ws.onmessage = function(data) {
    const json = JSON.parse(data.data);
    if (json.type == 'error') {
      document.getElementById('main').remove();
      document.getElementById('err').style.display = 'block';
      document.getElementById('errtxt').innerText = json.message;
    }
    
    if (json.type == 'info') {
      const { player } = json;
      document.getElementById('vcname').innerText = `In #${player.voiceChannel}`;
      if (player.hasdj) {
        document.getElementById('dj').style.display = 'none';
        document.getElementById('volume').disabled = false;
        document.getElementById('volumecontainer').classList.remove('disabled');
        document.getElementById('progress').disabled = false;
        document.getElementById('progresscontainer').classList.remove('disabled');
        document.getElementById('shuffle').classList.remove('disabled');
        document.getElementById('playbtn').classList.remove('disabled');
        document.getElementById('skip').classList.remove('disabled');
      }
    }
    
    if (json.type == 'playing') {
      const playbtn = document.getElementById('playbtn');
      if (!json.paused && playbtn.childNodes[0].classList.contains('feather-play')) {
        playbtn.childNodes[0].remove();
        const pause = document.createElement('i');
        pause.dataset.feather = 'pause';
        playbtn.appendChild(pause);
        feather.replace();
      }
      else if (playbtn.childNodes[0].classList.contains('feather-pause')) {
        playbtn.childNodes[0].remove();
        const play = document.createElement('i');
        play.dataset.feather = 'play';
        playbtn.appendChild(play);
        feather.replace();
      }
    }

    if (json.type == 'track') {
      document.getElementById('title').innerText = json.current.title.split('\n')[0];
      document.getElementById('author').innerText = json.current.title.split('\n')[1];
      document.getElementById('cover').src = json.current.img;
      changeFavicon(json.current.img);
      for (const i in json.current.colors) {
        let num = json.current.colors[i];
        num = num.toString(16);
        if (num.length == 5) num = '0' + num;
        json.current.colors[i] = '#' + num;
      }
      document.body.style.background = `linear-gradient(90deg, ${json.current.colors[0]}, ${json.current.colors[1]})`;
      document.getElementById('waves').style.background = `linear-gradient(90deg, ${json.current.colors[0]}, ${json.current.colors[1]})`;
      if (document.getElementById('queue').querySelector('.queueitem')) {
        document.getElementById('queue').querySelectorAll('.queueitem').forEach(item => item.remove());
      }
      json.queue.forEach(track => {
        for (const i in track.colors) {
          let num = track.colors[i];
          num = num.toString(16);
          if (num.length == 5) num = '0' + num;
          track.colors[i] = '#' + num;
        }
        if (!track.color) track.color = [Math.floor(Math.random() * 255), Math.floor(Math.random() * 255), Math.floor(Math.random() * 255)];
        const queueItem = document.createElement('a');
        queueItem.href = `javascript:skip(${json.queue.indexOf(track)});`;
        queueItem.style.background = `linear-gradient(90deg, ${track.colors[0]}, ${track.colors[1]})`;
        queueItem.classList.add('queueitem');
        const queueItemImg = document.createElement('img');
        queueItemImg.src = track.img;
        queueItemImg.classList.add('cover');
        queueItem.appendChild(queueItemImg);
        document.getElementById('queue').appendChild(queueItem);
        queueItem.innerHTML += track.title;
      });
      if (!document.getElementById('queue').querySelector('.queueitem')) {
        const noItems = document.createElement('a');
        noItems.innerText = 'No more items in queue\nAdd a song with /play!';
        noItems.classList.add('queueitem');
        document.getElementById('queue').appendChild(noItems);
      }
    }

    if (json.type == 'progress') {
      document.getElementById('progress').max = json.max;
      document.getElementById('progress').value = json.pos;
      document.getElementById('pos').innerText = convert(document.getElementById('progress').value);
      document.getElementById('total').innerText = convert(document.getElementById('progress').max - document.getElementById('progress').value);
    }

    if (json.type == 'volume') document.getElementById('volume').value = json.volume;
  }

</script>

<%- include("partials/footer") %>