<%- include("partials/header", { bot, user, path, title: `${bot.user.username} Music Player` }) %>
<link rel="stylesheet" type="text/css" href="/assets/musicstyle.css" />

<section class="hero is-fullheight-with-navbar is-dark">
  <div class="hero-body">  
    <div class="container has-text-centered">
      <p class="title">Playing Now</p>
      <p class="subtitle" id="vcname">#Voice Channel</p>
  
      <div id="queue" class="sidebar"></div>
      
      <div id="musiccontainer">
        <div class="item musicsegment">
          <div class="item">
            <img src="/assets/images/musicplaceholder.png" width="65%" style="border-radius: 10px;" id="cover">
          </div>
        </div>
        <div class="item musicsegment">
          <div class="item">
            <p class="title" id="title">Music Title</p>
            <br>
            <p class="subtitle" id="author">Music Author</p>
            <br>
            <div class="centered disabled" id="progresscontainer">
              <h5 id="pos" style="padding:15px; margin:0;">0:00</h5>
                <input type="range" disabled id="progress" oninput="seek();" value="0" style="width: 50%;">
              <h5 id="total" style="padding:15px; margin:0;">0:00</h5>
            </div>
            <div class="centered">
              <a href="/music/filters" class="mediacontrols" id="filters"><img src="/assets/icons/sliders.svg"></a>
              <a href="javascript:shuffle();" class="mediacontrols disabled" id="shuffle"><img src="/assets/icons/shuffle.svg"></a>
              <a href="javascript:toggleplay();" class="mediacontrols disabled" id="playbtn"><img id="play" src="/assets/icons/play.svg"></a>
              <a href="javascript:skip(1);" class="mediacontrols disabled" id="skip"><img src="/assets/icons/skip-forward.svg"></a>
              <a href="javascript:togglenav();" class="mediacontrols" id="queue"><img src="/assets/icons/list.svg"></a>
            </div>      
            <div class="centered disabled" id="volumecontainer">
              <img style="padding:15px; margin:0;" src="/assets/icons/volume-x.svg">
                <input type="range" disabled id="volume" oninput="vol();" style="width:40%;" max=150>
              <img style="padding:15px; margin:0;" src="/assets/icons/volume-2.svg">
            </div>
            <h5 class="centered disabled" id="dj">Users without the DJ role have limited access.</h5>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>

  function shuffle() {
    ws.send(JSON.stringify({
			req: 'shuffle',
		}));
  }

  function toggleplay() {
    ws.send(JSON.stringify({
			req: 'toggleplay',
		}));
  }

  function skip(amount) {
    ws.send(JSON.stringify({
			req: 'skip',
      amount
		}));
  }

  function vol() {
    ws.send(JSON.stringify({
      req: 'volume',
      volume: document.getElementById('volume').value
    }));
  }
  
  function seek() {
    ws.send(JSON.stringify({
      req: 'seek',
      time: document.getElementById('progress').value
    }));
  }

  function togglenav() {
    if (document.getElementById("queue").style.width != '300px') {
      document.getElementById("queue").style.width = "300px";
      if (window.innerWidth > window.innerHeight) {
        document.getElementById("musiccontainer").style.marginRight = "300px";
        document.getElementById("musiccontainer").style.width = "calc(100% - 300px)";
      }
    }
    else {
      document.getElementById("queue").style.width = "0";
      if (window.innerWidth > window.innerHeight) {
        document.getElementById("musiccontainer").style.marginRight= "0";
        document.getElementById("musiccontainer").style.width = "100%";
      }
    }
  }

  function convert(duration) {
    let seconds = parseInt((duration / 1000) % 60);
    let minutes = parseInt((duration / (1000 * 60)) % 60);
    const hours = parseInt((duration / (1000 * 60 * 60)) % 24);
    seconds = (seconds < 10) ? '0' + seconds : seconds;
    if (duration < 3600000) {
      return minutes + ':' + seconds;
    }
    else {
      minutes = (minutes < 10) ? '0' + minutes : minutes;
      return hours + ':' + minutes + ':' + seconds;
    }
  }

  function changeFavicon(src) {
    const link = document.createElement('link'),
    oldLink = document.getElementById('favicon');
    link.id = 'favicon';
    link.rel = 'shortcut icon';
    link.href = src;
    if (oldLink) document.head.removeChild(oldLink);
    document.head.appendChild(link);
  }

  const ws = new WebSocket('<%= wsurl %>?id=<%= user.id %>');

  ws.onmessage = function(data) {
    const json = JSON.parse(data.data);
    if (json.type == 'error') return alert(json.message);
    
    if (json.type == 'info') {
      const { player } = json;
      document.getElementById('vcname').innerText = player.voiceChannel;
      if (player.hasdj) {
        document.getElementById('dj').style.display = 'none';
        document.getElementById('volume').disabled = false;
        document.getElementById('volumecontainer').classList.remove('disabled');
        document.getElementById('progress').disabled = false;
        document.getElementById('progresscontainer').classList.remove('disabled');
        document.getElementById('shuffle').classList.remove('disabled');
        document.getElementById('playbtn').classList.remove('disabled');
        document.getElementById('skip').classList.remove('disabled');
      }
    }
    
    if (json.type == 'playing') {
      if (!json.paused) play.src = '/assets/icons/pause.svg';
      else play.src = '/assets/icons/play.svg';
    }

    if (json.type == 'track') {
      document.getElementById('title').innerText = json.current.title.split('\n')[0];
      document.getElementById('author').innerText = json.current.title.split('\n')[1];
      document.getElementById('cover').src = json.current.img;
      changeFavicon(json.current.img);
      for (const i in json.current.colors) {
        let num = json.current.colors[i];
        num = num.toString(16);
        if (num.length == 5) num = '0' + num;
        json.current.colors[i] = '#' + num;
      }
      document.getElementsByClassName('hero-body')[0].style.backgroundColor = json.current.colors[0];
      document.getElementsByClassName('hero-body')[0].style.backgroundImage = `linear-gradient(315deg, ${json.current.colors[0]}, ${json.current.colors[1]})`;
      document.getElementById('queue').innerHTML = '<a href="javascript:togglenav();"><img src="/assets/icons/x.svg"></a>'
      json.queue.forEach(track => {
        for (const i in track.colors) {
          let num = track.colors[i];
          num = num.toString(16);
          if (num.length == 5) num = '0' + num;
          track.colors[i] = '#' + num;
        }
        if (!track.color) track.color = [Math.floor(Math.random() * 255), Math.floor(Math.random() * 255), Math.floor(Math.random() * 255)];
        document.getElementById('queue').innerHTML += `<a href="javascript:skip(${json.queue.indexOf(track)});" style="background-image: linear-gradient(90deg, ${track.colors[0]}, ${track.colors[1]});" class="queueitem"><img src="${track.img}" style="filter: drop-shadow(0 0 10px rgba(0, 0, 0, 0.5));">${track.title}</a>`;
      });
    }

    if (json.type == 'progress') {
      document.getElementById('progress').max = json.max;
      document.getElementById('progress').value = json.pos;
      document.getElementById('pos').innerText = convert(document.getElementById('progress').value);
      document.getElementById('total').innerText = convert(document.getElementById('progress').max - document.getElementById('progress').value);
    }

    if (json.type == 'volume') document.getElementById('volume').value = json.volume;
  }

</script>

<%- include("partials/footer") %>